version: '3.7'

services:

  db:
    image: postgres:10.4-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:5.0.4-alpine3.9
    restart: always
    command: --maxmemory 200mb --maxmemory-policy allkeys-lru

  django:
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    command: /bin/bash /app/docker-entrypoint.sh
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DEBUG: ${DEBUG}
      DEBUG_SIMULATED_LAG: ${DEBUG_SIMULATED_LAG}
      SERVER_NAME: ${SERVER_NAME}
      PROTOCOL: ${PROTOCOL}

      SOCIAL_AUTH_DISCORD_KEY: ${SOCIAL_AUTH_DISCORD_KEY}
      SOCIAL_AUTH_DISCORD_SECRET: ${SOCIAL_AUTH_DISCORD_SECRET}
      SOCIAL_AUTH_GITHUB_KEY: ${SOCIAL_AUTH_GITHUB_KEY}
      SOCIAL_AUTH_GITHUB_SECRET: ${SOCIAL_AUTH_GITHUB_SECRET}

      GS_BUCKET_NAME: ${GS_BUCKET_NAME}
      GS_PROJECT_ID: ${GS_PROJECT_ID}
      GS_CREDENTIALS: ${GS_CREDENTIALS}
      GS_LOCATION: ${GS_LOCATION}

      B2_KEY_ID: ${B2_KEY_ID}
      B2_KEY: ${B2_KEY}
      B2_BUCKET_ID: ${B2_BUCKET_ID}
      B2_LOCATION: ${B2_LOCATION}
      B2_FILE_OVERWRITE: ${B2_FILE_OVERWRITE}

      REDIS_URL: ${REDIS_URL}
      DB_CLIENT_CERT: ${DB_CLIENT_CERT}
      DB_CLIENT_KEY: ${DB_CLIENT_KEY}
      DB_SERVER_CA: ${DB_SERVER_CA}
      SENTRY_DSN: ${SENTRY_DSN}
    ports:
      - 127.0.0.1:80:8000
    depends_on:
      - db
      - redis
    volumes:
      - django-data:/app/var
      - ./django:/app
      - built-static:/app/static_built:ro

  builder:
    build:
      context: .
      dockerfile: ./docker/builder.Dockerfile
    restart: always
    volumes:
      - ./builder:/app/
      - built-static:/app/build/

volumes:
  db-data:
  django-data:
  built-static:
